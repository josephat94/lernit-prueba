{"version":3,"file":"static/webpack/static/development/pages/index.js.c45dfda1bb175cd313f7.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["\n\n\n\nimport { useForm } from 'react-hook-form';\nimport { useState, useRef, useContext } from 'react';\nimport app from '../lib/firebase';\nimport { useRouter } from 'next/router'\nimport { MDBBtn, } from 'mdbreact';\nimport { AuthContext } from '../components/auth/auth';\nimport { useFormik } from 'formik';\nimport { MDBNotification } from \"mdbreact\";\nimport { toast } from 'react-toastify';\nconst InputStyle = {\n    minWidth: \"150px\",\n    border: \".5px solid #efefef\",\n    padding: \" .5rem\",\n    width: \"300px\",\n    height: \"35px\",\n    fontSize: \"15px\",\n    color: \"black\"\n}\nconst flex = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100vh\",\n    flexDirection: \"column\"\n}\n\nconst validate = values => {\n    const errors = {};\n    if (!values.password) {\n        errors.password = 'Requerido';\n    } else if (values.password.length < 5) {\n        errors.password = 'Debe ser de almenos 6 caracteres';\n    }\n\n    if (!values.email) {\n        errors.email = 'Requerido';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Email invalido';\n    }\n\n    return errors;\n};\n\n\nconst Login = props => {\n\n    const { register, handleSubmit, watch, errors } = useForm();\n    const [signUpMode, setSignUpMode] = useState(false);\n    const formRef = useRef();\n    const router = useRouter()\n    const { currentUser } = useContext(AuthContext);\n\n\n\n    const notify = type => {\n        toast.error('Error message', {\n            closeButton: false\n        });\n    };\n\n    const submitForm = async (data) => {\n       \n        if (signUpMode) {\n           \n            app.auth().createUserWithEmailAndPassword(data.email, data.password).then(user => {\n                let id = user.user.uid;\n                 app.database().ref(\"/counters/\" + id).set({ counter: 0 })\n            }).catch(error => {\n                console.log(\"ERROR\");\n                toast.error(error.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            })\n\n        } else {\n            try {\n                await app.auth().signInWithEmailAndPassword(data.email, data.password);\n                router.push(\"/\")\n            } catch (error) {\n                \n                toast.error(error.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n        }\n\n        setSignUpMode(false);\n    }\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n        },\n        validate,\n        onSubmit: values => {\n            submitForm(values);\n        },\n    });\n\n    const SignUp = () => {\n        setSignUpMode(true);\n        formik.handleSubmit();\n    }\n    return (\n        <div style={flex} >\n            <div style={{ textAlign: \"left\", width: \"320px\", marginBottom: \"40px\" }}>\n                <h1 style={{ fontWeight: \"500\", color: \"#4B515D\", marginBottom: \"5px\" }}>\n                    We are <span style={{ color: \"#4239cd\" }}>\n                        Lernit\n                    </span>\n                </h1>\n\n                <p style={{ marginTop: \"0px\" }}>\n                    Mejora tu experiencia de aprendizaje\n                </p>\n            </div>\n            <form \n           autocomplete=\"nope\"\n            ref={formRef} \n            style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", marginBottom:\"100px\" }} onSubmit={formik.handleSubmit}>\n\n                <input\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                    style={InputStyle} placeholder=\"correo electrónico\" name=\"email\" ref={register()} />\n                {formik.errors.email ? <div className=\"errors\">{formik.errors.email}</div> : null}\n\n                <br></br>\n\n                <input\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    type=\"password\"\n                    style={InputStyle} placeholder=\"contraseña\" name=\"password\" ref={register({ required: true })} />\n                {formik.errors.password && <div className=\"errors\">{formik.errors.password}</div>}\n\n                <br></br>\n\n                <br></br>\n                <br></br>\n\n\n\n                <MDBBtn style={{ width: \"317px\", background: \"#4B515D\" }} type=\"submit\">Iniciar Sesión</MDBBtn>\n\n                <MDBBtn style={{ width: \"317px\", marginTop: \"40px\", background: \"#4B515D\" }} onClick={SignUp}>\n                    Crear Cuenta\n              </MDBBtn>\n\n            </form>\n        </div>\n    )\n}\n\nexport default Login;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AANA;AAAA;AACA;AASA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAlBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAuBA;AAvBA;AAAA;AACA;AADA;AAAA;AAAA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AA3BA;AAsCA;AACA;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAuCA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}