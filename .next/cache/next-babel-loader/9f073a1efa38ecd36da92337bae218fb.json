{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/josephatreyes/Documents/GitHub/lernit-prueba/components/auth/auth.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useState, useEffect } from \"react\";\nimport * as firebase from 'firebase/app';\nimport \"firebase/auth\";\nimport app from \"../../lib/firebase\";\nexport var AuthContext = createContext();\nexport var AuthProvider = function AuthProvider(props) {\n  var children = props.children;\n\n  var _useState = useState(null),\n      currentUser = _useState[0],\n      setCurrentUser = _useState[1];\n\n  useEffect(function () {\n    app.auth().onAuthStateChanged(setCurrentUser);\n  }, []);\n  return __jsx(AuthContext.Provider, {\n    value: {\n      currentUser: currentUser\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/josephatreyes/Documents/GitHub/lernit-prueba/components/auth/auth.js"],"names":["createContext","useState","useEffect","firebase","app","AuthContext","AuthProvider","props","children","currentUser","setCurrentUser","auth","onAuthStateChanged"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,OAAO,KAAKC,QAAZ,MAA0B,cAA1B;AACA,OAAO,eAAP;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAIA,OAAO,IAAMC,WAAW,GAAGL,aAAa,EAAjC;AACP,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,MACzBC,QADyB,GACZD,KADY,CACzBC,QADyB;;AAAA,kBAEKP,QAAQ,CAAC,IAAD,CAFb;AAAA,MAE1BQ,WAF0B;AAAA,MAEbC,cAFa;;AAIjCR,EAAAA,SAAS,CAAC,YAAM;AACZE,IAAAA,GAAG,CAACO,IAAJ,GAAWC,kBAAX,CAA8BF,cAA9B;AACH,GAFQ,EAEN,EAFM,CAAT;AAGA,SACI,MAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EACD;AAAED,MAAAA,WAAW,EAAXA;AAAF,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKSD,QALT,CADJ;AAWH,CAlBM","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\n\nimport * as firebase from 'firebase/app'\nimport \"firebase/auth\";\nimport app from \"../../lib/firebase\";\n\n\n\nexport const AuthContext = createContext();\nexport const AuthProvider = props => {\n    const { children } = props;\n    const [currentUser, setCurrentUser] = useState(null);\n\n    useEffect(() => {\n        app.auth().onAuthStateChanged(setCurrentUser)\n    }, [])\n    return (\n        <AuthContext.Provider\n            value={\n                { currentUser }\n            }\n        >\n                {children}\n        </AuthContext.Provider>\n    );\n\n\n}"]},"metadata":{},"sourceType":"module"}