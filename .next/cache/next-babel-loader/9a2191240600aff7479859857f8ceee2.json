{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/josephatreyes/Desktop/lernit-prueba/pages/login.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useForm } from 'react-hook-form';\nimport { useState, useRef, useContext } from 'react';\nimport app from '../lib/firebase';\nimport { useRouter } from 'next/router';\nimport { MDBBtn } from 'mdbreact';\nimport { AuthContext } from '../components/auth/auth';\nimport { useFormik } from 'formik';\nimport { MDBNotification } from \"mdbreact\";\nimport { toast } from 'react-toastify';\nvar InputStyle = {\n  minWidth: \"150px\",\n  border: \".5px solid #efefef\",\n  padding: \" .5rem\",\n  width: \"300px\",\n  height: \"35px\",\n  fontSize: \"15px\",\n  color: \"black\"\n};\nvar flex = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"100%\",\n  height: \"100vh\",\n  flexDirection: \"column\"\n};\n\nvar validate = function validate(values) {\n  var errors = {};\n\n  if (!values.password) {\n    errors.password = 'Requerido';\n  } else if (values.password.length < 5) {\n    errors.password = 'Debe ser de almenos 6 caracteres';\n  }\n\n  if (!values.email) {\n    errors.email = 'Requerido';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Email invalido';\n  }\n\n  return errors;\n};\n\nvar Login = function Login(props) {\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      errors = _useForm.errors;\n\n  var _useState = useState(false),\n      signUpMode = _useState[0],\n      setSignUpMode = _useState[1];\n\n  var formRef = useRef();\n  var router = useRouter();\n\n  var _useContext = useContext(AuthContext),\n      currentUser = _useContext.currentUser;\n\n  var notify = function notify(type) {\n    toast.error('Error message', {\n      closeButton: false\n    });\n  };\n\n  var submitForm = function submitForm(data) {\n    return _regeneratorRuntime.async(function submitForm$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setSignUpMode(false);\n\n            if (!signUpMode) {\n              _context.next = 5;\n              break;\n            }\n\n            app.auth().createUserWithEmailAndPassword(data.email, data.password).then(function (user) {\n              var id = user.user.uid;\n              app.database().ref(\"/counters/\" + id).set({\n                counter: 0\n              });\n            })[\"catch\"](function (error) {\n              toast.error(error.message, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined\n              });\n            });\n            _context.next = 14;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(app.auth().signInWithEmailAndPassword(data.email, data.password));\n\n          case 8:\n            router.push(\"/\");\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](5);\n            toast.error(_context.t0.message, {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 11]], Promise);\n  };\n\n  var formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validate: validate,\n    onSubmit: function onSubmit(values) {\n      submitForm(values);\n    }\n  });\n\n  var SignUp = function SignUp() {\n    setSignUpMode(true);\n    formik.handleSubmit();\n  };\n\n  return __jsx(\"div\", {\n    style: flex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      textAlign: \"left\",\n      width: \"320px\",\n      marginBottom: \"40px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    style: {\n      fontWeight: \"500\",\n      color: \"#4B515D\",\n      marginBottom: \"5px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"We are \", __jsx(\"span\", {\n    style: {\n      color: \"#4239cd\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 28\n    }\n  }, \"Lernit\")), __jsx(\"p\", {\n    style: {\n      marginTop: \"0px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"Mejora tu experiencia de aprendizaje\")), __jsx(\"form\", {\n    ref: formRef,\n    style: {\n      width: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    onSubmit: formik.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    style: InputStyle,\n    placeholder: \"correo electr\\xF3nico\",\n    name: \"email\",\n    ref: register(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }), formik.errors.email ? __jsx(\"div\", {\n    className: \"errors\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 40\n    }\n  }, formik.errors.email) : null, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    value: formik.values.password,\n    onChange: formik.handleChange,\n    style: InputStyle,\n    placeholder: \"contrase\\xF1a\",\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }), formik.errors.password && __jsx(\"div\", {\n    className: \"errors\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 44\n    }\n  }, formik.errors.password), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }), __jsx(MDBBtn, {\n    style: {\n      width: \"317px\",\n      background: \"#4B515D\"\n    },\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, \"Iniciar Sesi\\xF3n\"), __jsx(MDBBtn, {\n    style: {\n      width: \"317px\",\n      marginTop: \"40px\",\n      background: \"#4B515D\"\n    },\n    onClick: SignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, \"Crear Cuenta\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/josephatreyes/Desktop/lernit-prueba/pages/login.js"],"names":["useForm","useState","useRef","useContext","app","useRouter","MDBBtn","AuthContext","useFormik","MDBNotification","toast","InputStyle","minWidth","border","padding","width","height","fontSize","color","flex","display","justifyContent","alignItems","flexDirection","validate","values","errors","password","length","email","test","Login","props","register","handleSubmit","watch","signUpMode","setSignUpMode","formRef","router","currentUser","notify","type","error","closeButton","submitForm","data","auth","createUserWithEmailAndPassword","then","user","id","uid","database","ref","set","counter","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","signInWithEmailAndPassword","push","formik","initialValues","onSubmit","SignUp","textAlign","marginBottom","fontWeight","marginTop","handleChange","required","background"],"mappings":"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","sourcesContent":["\n\n\n\nimport { useForm } from 'react-hook-form';\nimport { useState, useRef, useContext } from 'react';\nimport app from '../lib/firebase';\nimport { useRouter } from 'next/router'\nimport { MDBBtn, } from 'mdbreact';\nimport { AuthContext } from '../components/auth/auth';\nimport { useFormik } from 'formik';\nimport { MDBNotification } from \"mdbreact\";\nimport { toast } from 'react-toastify';\nconst InputStyle = {\n    minWidth: \"150px\",\n    border: \".5px solid #efefef\",\n    padding: \" .5rem\",\n    width: \"300px\",\n    height: \"35px\",\n    fontSize: \"15px\",\n    color: \"black\"\n}\nconst flex = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100vh\",\n    flexDirection: \"column\"\n}\n\nconst validate = values => {\n    const errors = {};\n    if (!values.password) {\n        errors.password = 'Requerido';\n    } else if (values.password.length < 5) {\n        errors.password = 'Debe ser de almenos 6 caracteres';\n    }\n\n    if (!values.email) {\n        errors.email = 'Requerido';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Email invalido';\n    }\n\n    return errors;\n};\n\n\nconst Login = props => {\n\n    const { register, handleSubmit, watch, errors } = useForm();\n    const [signUpMode, setSignUpMode] = useState(false);\n    const formRef = useRef();\n    const router = useRouter()\n    const { currentUser } = useContext(AuthContext);\n\n\n\n    const notify = type => {\n        toast.error('Error message', {\n            closeButton: false\n        });\n    };\n\n    const submitForm = async (data) => {\n        setSignUpMode(false);\n        if (signUpMode) {\n            app.auth().createUserWithEmailAndPassword(data.email, data.password).then(user => {\n                let id = user.user.uid;\n                 app.database().ref(\"/counters/\" + id).set({ counter: 0 })\n            }).catch(error => {\n                toast.error(error.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            })\n\n        } else {\n            try {\n                await app.auth().signInWithEmailAndPassword(data.email, data.password);\n                router.push(\"/\")\n            } catch (error) {\n\n                toast.error(error.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n        }\n    }\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n        },\n        validate,\n        onSubmit: values => {\n            submitForm(values);\n        },\n    });\n\n    const SignUp = () => {\n        setSignUpMode(true);\n        formik.handleSubmit();\n    }\n    return (\n        <div style={flex} >\n            <div style={{ textAlign: \"left\", width: \"320px\", marginBottom: \"40px\" }}>\n                <h1 style={{ fontWeight: \"500\", color: \"#4B515D\", marginBottom: \"5px\" }}>\n                    We are <span style={{ color: \"#4239cd\" }}>\n                        Lernit\n                    </span>\n                </h1>\n\n                <p style={{ marginTop: \"0px\" }}>\n                    Mejora tu experiencia de aprendizaje\n                </p>\n            </div>\n            <form ref={formRef} style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }} onSubmit={formik.handleSubmit}>\n\n                <input\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                    style={InputStyle} placeholder=\"correo electrónico\" name=\"email\" ref={register()} />\n                {formik.errors.email ? <div className=\"errors\">{formik.errors.email}</div> : null}\n\n                <br></br>\n\n                <input\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    style={InputStyle} placeholder=\"contraseña\" name=\"password\" ref={register({ required: true })} />\n                {formik.errors.password && <div className=\"errors\">{formik.errors.password}</div>}\n\n                <br></br>\n\n                <br></br>\n                <br></br>\n\n\n\n                <MDBBtn style={{ width: \"317px\", background: \"#4B515D\" }} type=\"submit\">Iniciar Sesión</MDBBtn>\n\n                <MDBBtn style={{ width: \"317px\", marginTop: \"40px\", background: \"#4B515D\" }} onClick={SignUp}>\n                    Crear Cuenta\n              </MDBBtn>\n\n            </form>\n        </div>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}