{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/josephatreyes/Desktop/lernit-prueba/pages/login.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useForm } from 'react-hook-form';\n\nvar Login = function Login(props) {\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {};\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 1\n    }\n  }, __jsx(\"input\", {\n    name: \"email\",\n    defaultValue: \"test\",\n    ref: register,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), __jsx(\"input\", {\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), errors.exampleRequired && __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 34\n    }\n  }, \"This field is required\"), __jsx(\"input\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/josephatreyes/Desktop/lernit-prueba/pages/login.js"],"names":["useForm","Login","props","register","handleSubmit","watch","errors","onSubmit","data","required","exampleRequired"],"mappings":";;;;;AAIA,SAAQA,OAAR,QAAsB,iBAAtB;;AACA,IAAMC,KAAK,GAAE,SAAPA,KAAO,CAAAC,KAAK,EAAE;AAAA,iBAEkCF,OAAO,EAFzC;AAAA,MAERG,QAFQ,YAERA,QAFQ;AAAA,MAEEC,YAFF,YAEEA,YAFF;AAAA,MAEgBC,KAFhB,YAEgBA,KAFhB;AAAA,MAEuBC,MAFvB,YAEuBA,MAFvB;;AAGhB,MAAMC,QAAQ,GAAC,SAATA,QAAS,CAAAC,IAAI,EAAE,CAEpB,CAFD;;AAGJ,SACA,4BACA;AAAM,IAAA,QAAQ,EAAEJ,YAAY,CAACG,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEM;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,YAAY,EAAC,MAAjC;AAAwC,IAAA,GAAG,EAAEJ,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,EAIM;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,GAAG,EAAEA,QAAQ,CAAC;AAAEM,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJN,EAMOH,MAAM,CAACI,eAAP,IAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BANjC,EAOM;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPN,CADA,CADA;AAcC,CApBD;;AAsBA,eAAeT,KAAf","sourcesContent":["\n\n\n\nimport {useForm} from 'react-hook-form';\nconst Login= props=>{\n\n    const { register, handleSubmit, watch, errors } = useForm();\n    const onSubmit=data=>{\n\n    }\nreturn (\n<>\n<form onSubmit={handleSubmit(onSubmit)}>\n    {/* register your input into the hook by invoking the \"register\" function */}\n      <input name=\"email\" defaultValue=\"test\" ref={register} />\n      {/* include validation with required or other standard HTML validation rules */}\n      <input name=\"password\" ref={register({ required: true })} />\n      {/* errors will return when field validation fails  */}\n      {errors.exampleRequired && <span>This field is required</span>}\n      <input type=\"submit\" />\n    </form>\n</>\n\n)\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}