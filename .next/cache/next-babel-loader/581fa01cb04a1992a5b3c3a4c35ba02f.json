{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/josephatreyes/Desktop/lernit-prueba/pages/login.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useForm } from 'react-hook-form';\nimport { useState, useRef } from 'react';\nimport app from '../lib/firebase';\n\nvar Login = function Login(props) {\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      errors = _useForm.errors;\n\n  var _useState = useState(false),\n      signUpMode = _useState[0],\n      setSignUpMode = _useState[1];\n\n  var formRef = useRef();\n\n  var onSubmit = function onSubmit(data) {\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(data);\n\n            if (signUpMode) {\n              console.log(\"En signUp\");\n              setSignUpMode(false);\n              /*    try{\n                     await app.auth().createUserWithEmailAndPassword()\n                 }catch (error){\n                  } */\n            } else {\n              console.log(\"Do login\");\n            }\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var SignUp = function SignUp() {\n    setSignUpMode(true);\n    handleSubmit(formRef.current.submit);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    ref: formRef,\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    placeholder: \"correo electr\\xF3nico\",\n    name: \"email\",\n    ref: register,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    placeholder: \"contrase\\xF1a\",\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), errors.exampleRequired && __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 44\n    }\n  }, \"This field is required\"), __jsx(\"input\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    onClick: SignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Regsitrate\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/josephatreyes/Desktop/lernit-prueba/pages/login.js"],"names":["useForm","useState","useRef","app","Login","props","register","handleSubmit","watch","errors","signUpMode","setSignUpMode","formRef","onSubmit","data","console","log","SignUp","current","submit","display","flexDirection","alignItems","justifyContent","required","exampleRequired"],"mappings":";;;;;;;AAIA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AAAA,iBAE+BL,OAAO,EAFtC;AAAA,MAEXM,QAFW,YAEXA,QAFW;AAAA,MAEDC,YAFC,YAEDA,YAFC;AAAA,MAEaC,KAFb,YAEaA,KAFb;AAAA,MAEoBC,MAFpB,YAEoBA,MAFpB;;AAAA,kBAGiBR,QAAQ,CAAC,KAAD,CAHzB;AAAA,MAGZS,UAHY;AAAA,MAGAC,aAHA;;AAInB,MAAMC,OAAO,GAAGV,MAAM,EAAtB;;AACA,MAAMW,QAAQ,GAAG,SAAXA,QAAW,CAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AACbC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,gBAAIJ,UAAJ,EAAgB;AAEZK,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAL,cAAAA,aAAa,CAAC,KAAD,CAAb;AACH;;;;AAMA,aAVD,MAUO;AACHI,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH;;AAdY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAiBA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjBN,IAAAA,aAAa,CAAC,IAAD,CAAb;AACCJ,IAAAA,YAAY,CAACK,OAAO,CAACM,OAAR,CAAgBC,MAAjB,CAAZ;AACJ,GAHD;;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,GAAG,EAAEP,OAAX;AAAoB,IAAA,KAAK,EAAE;AAAEQ,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,aAAa,EAAE,QAAlC;AAA4CC,MAAAA,UAAU,EAAE,QAAxD;AAAkEC,MAAAA,cAAc,EAAE;AAAlF,KAA3B;AAAyH,IAAA,QAAQ,EAAEhB,YAAY,CAACM,QAAD,CAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAO,IAAA,WAAW,EAAC,uBAAnB;AAAwC,IAAA,IAAI,EAAC,OAA7C;AAAqD,IAAA,GAAG,EAAEP,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAKI;AAAO,IAAA,WAAW,EAAC,eAAnB;AAAgC,IAAA,IAAI,EAAC,UAArC;AAAgD,IAAA,GAAG,EAAEA,QAAQ,CAAC;AAAEkB,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAQKf,MAAM,CAACgB,eAAP,IAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAR/B,EASI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAWI;AAAQ,IAAA,OAAO,EAAER,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ,CADJ,CADJ;AAsBH,CAhDD;;AAkDA,eAAeb,KAAf","sourcesContent":["\n\n\n\nimport { useForm } from 'react-hook-form';\nimport { useState, useRef } from 'react';\nimport app from '../lib/firebase';\n\nconst Login = props => {\n\n    const { register, handleSubmit, watch, errors } = useForm();\n    const [signUpMode, setSignUpMode] = useState(false);\n    const formRef = useRef();\n    const onSubmit = async data => {\n        console.log(data);\n        if (signUpMode) {\n\n            console.log(\"En signUp\")\n            setSignUpMode(false);\n         /*    try{\n                await app.auth().createUserWithEmailAndPassword()\n            }catch (error){\n\n            } */\n           \n        } else {\n            console.log(\"Do login\")\n        }\n    }\n\n    const SignUp = () => {\n        setSignUpMode(true);\n         handleSubmit(formRef.current.submit)\n    }\n    return (\n        <div >\n            <form ref={formRef} style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }} onSubmit={handleSubmit(onSubmit)}>\n                {/* register your input into the hook by invoking the \"register\" function */}\n                <input placeholder=\"correo electrónico\" name=\"email\" ref={register} />\n                <br></br>\n                {/* include validation with required or other standard HTML validation rules */}\n                <input placeholder=\"contraseña\" name=\"password\" ref={register({ required: true })} />\n                <br></br>\n                {/* errors will return when field validation fails  */}\n                {errors.exampleRequired && <span>This field is required</span>}\n                <input type=\"submit\" />\n\n                <button onClick={SignUp}>\n                    Regsitrate\n      </button>\n            </form>\n\n        </div>\n\n\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}